{"version":3,"sources":["components/popup/Options.js","components/layout/Header.js","hooks/useInputState.js","components/popup/DatePicker.js","components/tasks/TasksAdd.js","hooks/useLocalStorage.js","hooks/useTaskState.js","components/tasks/Tasks.js","components/layout/Content.js","components/layout/Footer.js","context/theme-context.js","App.js","index.js"],"names":["Options","props","className","type","onClick","setShowOptions","href","Header","useState","showOptions","data-testid","xlinkHref","module","initialVal","value","setValue","e","target","DatePicker","currDate","Date","currDay","getDate","currMonth","getMonth","currYear","getFullYear","month","day","year","chosenDate","setChosenDate","monthNames","days","aria-label","updTaskDate","showPicker","lastMonth","nextMonth","blanks","dateName","getDay","i","push","blankDates","map","date","key","uuid","dates","numDays","calendarDates","chooseDate","TasksAdd","useInputState","handleChange","reset","taskDate","setTaskDate","showDatePicker","setShowDatePicker","formattedDate","setFormattedDate","onSubmit","preventDefault","addTask","onChange","useLocalStorage","defaultVal","val","JSON","parse","window","localStorage","getItem","String","state","setState","useEffect","setItem","stringify","initialTasks","tasks","setTasks","newTaskText","id","task","completed","removeTask","taskId","updatedTasks","filter","toggleTask","deleteComplete","Tasks","useTaskState","Content","Footer","ThemeContext","createContext","ThemeProvider","theme","setTheme","Provider","toggleTheme","children","App","setModule","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.546f27e7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Options(props) {\r\n    return (\r\n        <div className=\"options\">\r\n            <div className=\"options__container\">\r\n                <button type=\"button\" className=\"options__close\" onClick={() => props.setShowOptions(false)}>X</button>\r\n                <h1>Organizm</h1>\r\n                <p className=\"options__welcome\">A life-organizing application created by Kari Minger.</p>\r\n                <p>This app is a work in progress, currently at version 1.0. At this point, only task list\r\n                     functionality is available. As the app grows, like a living thing, you'll see lists, meal planning, budgeting, \r\n                     travel planning, habit/symptom tracking, and calendered summaries added. I hope you enjoy \r\n                     using this app as it evolves.</p>\r\n\r\n                <p>Please send me a message on FaceBook via a post to my wall (if we know each other you know I \r\n                     don't use Messenger) or \r\n                     <a href=\"mailto:kariminger@gmail.com\"> by email </a> \r\n                     if you have any notes for improvement. \r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport Options from '../popup/Options';\r\n\r\nexport default function Header(props) {\r\n    \r\n    const [showOptions, setShowOptions] = useState(false);\r\n\r\n    return (\r\n        <header className=\"header\" data-testid=\"header\">\r\n            <h1 className=\"header__title\">Organizm</h1>\r\n            <button type=\"button\" className=\"header__settings\" onClick={() => setShowOptions(true)}>\r\n                <svg className=\"header__icon\">\r\n\t\t            <use xlinkHref=\"./images/symbol-defs.svg#icon-settings\"></use>\r\n\t            </svg>\r\n            </button>\r\n            {showOptions && <Options module={props.module} setShowOptions={setShowOptions}/>}\r\n        </header>\r\n    )\r\n}\r\n","import { useState } from \"react\";\nexport default initialVal => {\n  const [value, setValue] = useState(initialVal);\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset];\n};\n","import React, {useState} from 'react';\r\nimport uuid from \"uuid\";\r\n\r\n\r\nexport default function DatePicker(props) {\r\n    let currDate = new Date();\r\n    let currDay = currDate.getDate();\r\n    let currMonth = currDate.getMonth() + 1;\r\n    let currYear = currDate.getFullYear(); \r\n    const [chosenDate, setChosenDate] = useState({month: currMonth, day: currDay, year: currYear});\r\n\r\n    const monthNames = [{month: \"January\", days: 31},\r\n                        {month: \"February\", days: 28},\r\n                        {month: \"March\", days: 31},\r\n                        {month: \"April\", days: 31},\r\n                        {month: \"May\", days: 31},\r\n                        {month: \"June\", days: 30},\r\n                        {month: \"July\", days: 31},\r\n                        {month: \"August\", days: 31},\r\n                        {month: \"September\", days: 30},\r\n                        {month: \"October\", days: 31},\r\n                        {month: \"November\", days: 30},\r\n                        {month: \"December\", days: 31}];\r\n    const chooseDate = (date) => {\r\n        const month = chosenDate.month;\r\n        const year = chosenDate.year;\r\n        setChosenDate({month: month, day: date, year: year});\r\n    }\r\n    const dateBack = () => {\r\n        const lastMonth = chosenDate.month === 1 ? 12 : chosenDate.month - 1;\r\n        const day = chosenDate.day;\r\n        const year = lastMonth === 12 ? chosenDate.year - 1 : chosenDate.year;\r\n        setChosenDate({month: lastMonth, day: day, year: year});\r\n    }\r\n\r\n    const dateForward = () => {\r\n        const nextMonth = chosenDate.month === 12 ? 1 : chosenDate.month + 1;\r\n        const day = chosenDate.day;\r\n        const year = nextMonth === 1 ? chosenDate.year + 1 : chosenDate.year;\r\n        setChosenDate({month: nextMonth, day: day, year: year});\r\n    }\r\n\r\n    const calendarDates = () => {\r\n        let dates = [];\r\n        let numDays = chosenDate.month === 2 && chosenDate.year % 4 === 0 ? 29 : monthNames[chosenDate.month - 1].days;\r\n        for( let i = 1; i <= numDays; i++){\r\n            dates.push(i);\r\n        }\r\n        return dates;\r\n    }\r\n    const blankDates = () => {\r\n        let blanks = [];\r\n        let dateName = `${chosenDate.month} 1, ${chosenDate.year}`;\r\n        let day = new Date(dateName).getDay();\r\n        if(day !== 0){\r\n            for( let i = 0; i < day; i++){\r\n                blanks.push(i);\r\n            }\r\n        }\r\n        return blanks;\r\n    }\r\n    \r\n    return (\r\n        <div className=\"datepicker\">\r\n            <div className=\"datepicker__container\">\r\n                <p className=\"datepicker__chosen\">\r\n                    <span className=\"datepicker__chosen-dateDisplay\"> {chosenDate.month}/{chosenDate.day}/{chosenDate.year}</span>\r\n                    <button type=\"button\" className=\"datepicker__button datepicker__button--save\" aria-label=\"Save Date\" onClick={() => props.updTaskDate(chosenDate)}>\r\n                        <svg className=\"tasks__button-icon\">\r\n                            <use xlinkHref=\"./images/symbol-defs.svg#icon-save\"></use>\r\n                        </svg>\r\n                    </button>\r\n                    <button type=\"button\" \r\n                        className=\"datepicker__button datepicker__button--close\" \r\n                        aria-label=\"Close Date Picker\" \r\n                        onClick={() => props.showPicker(false)}>X</button>\r\n                </p>\r\n                <div className=\"datepicker__calendar\">\r\n                    <div className=\"datepicker__month\">\r\n                        <button type=\"button\" className=\"datepicker__button\" aria-label=\"Go Back\" onClick={dateBack}>\r\n                            &lt;\r\n                        </button>\r\n                        <span className=\"datepicker__monthText\">{monthNames[chosenDate.month - 1].month}</span>\r\n                        <button type=\"button\" className=\"datepicker__button\" aria-label=\"Go Forward\" onClick={dateForward}>\r\n                            &gt;\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"datepicker__days\">\r\n                        {blankDates().map(date => (\r\n                            <div className=\"datepicker__day\" key={uuid()}></div>\r\n                        ))}\r\n                        {calendarDates().map(date => (\r\n                                <div className=\"datepicker__day\" key={date} onClick={() => chooseDate(date)}>{date}</div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport useInputState from '../../hooks/useInputState';\r\nimport DatePicker from \"../popup/DatePicker\";\r\n\r\nexport default function TasksAdd(props) {\r\n    const [value, handleChange, reset] = useInputState(\"\");\r\n    const [taskDate, setTaskDate] = useState(\"\");\r\n    const [showDatePicker, setShowDatePicker] = useState(false);\r\n    const [formattedDate, setFormattedDate] = useState(\"\");\r\n    \r\n    const updTaskDate = (date) => {\r\n        setTaskDate(date);\r\n        setShowDatePicker(false);\r\n        let formattedDate = date.month + \"/\" + date.day + \"/\" + date.year;\r\n        setFormattedDate(formattedDate);\r\n    }\r\n\r\n    const clearTask = () => {\r\n        setTaskDate(\"\");\r\n        setFormattedDate(\"\");\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div className=\"tasks__form-container tasks__form-container--add\">\r\n            <form className=\"tasks__form\" onSubmit={e => {\r\n                    e.preventDefault();\r\n                    props.addTask(value, taskDate, formattedDate);\r\n                    reset();\r\n                    setFormattedDate(\"\");\r\n                }}   \r\n            >\r\n                <button type=\"button\" className=\"tasks__button\" onClick={clearTask}>\r\n                    <svg className=\"tasks__button-icon\">\r\n                        <use xlinkHref=\"./images/symbol-defs.svg#icon-pencil\"></use>\r\n                    </svg>\r\n                </button>\r\n                <input className=\"tasks__form-input\" type=\"text\" value={value} onChange={handleChange}></input>\r\n                <button type=\"button\" className=\"tasks__button\" aria-label=\"Assign Date\" onClick={() => setShowDatePicker(true)}>\r\n                    <svg className=\"tasks__button-icon\">\r\n                        <use xlinkHref=\"./images/symbol-defs.svg#icon-calendar\"></use>\r\n                    </svg>\r\n                </button>\r\n                <button type=\"submit\" className=\"tasks__button\" aria-label=\"Save Task\">\r\n                    <svg className=\"tasks__button-icon\">\r\n                        <use xlinkHref=\"./images/symbol-defs.svg#icon-save\"></use>\r\n                    </svg>\r\n                </button>\r\n            </form>\r\n            {showDatePicker && <DatePicker updTaskDate={updTaskDate} showPicker={setShowDatePicker} />}\r\n            <p className=\"tasks__form-datetext\">{formattedDate}</p>\r\n        </div>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\n\r\nfunction useLocalStorage(key, defaultVal) {\r\n    const [state, setState] = useState(() => {\r\n        let val;\r\n        try {\r\n            val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\r\n        } catch (e){\r\n            val = defaultVal;\r\n        }\r\n        return val;\r\n    });\r\n    useEffect(() => {\r\n        window.localStorage.setItem(key, JSON.stringify(state));\r\n    }, [state, key]);\r\n    return [state, setState];\r\n}\r\n\r\n\r\nexport default useLocalStorage;","import useLocalStorage from './useLocalStorage';\r\nimport uuid from \"uuid\";\r\n\r\nexport default initialTasks => {\r\n    const [tasks, setTasks] = useLocalStorage(\"tasks\", initialTasks);\r\n        return {\r\n        tasks,\r\n        addTask: (newTaskText, taskDate, formattedDate) => {\r\n            setTasks([...tasks, {id: uuid(), task: newTaskText, completed: false, date: taskDate, formattedDate: formattedDate}]);\r\n        },\r\n        removeTask: taskId => {\r\n            const updatedTasks = tasks.filter(task => task.id !== taskId);\r\n            setTasks(updatedTasks);\r\n        },\r\n        toggleTask: taskId => {\r\n            const updatedTasks = tasks.map(task => task.id === taskId ? {...task, completed: !task.completed} : task);\r\n            setTasks(updatedTasks);\r\n        },\r\n        deleteComplete: () => {\r\n            const updatedTasks = tasks.filter(task => !task.completed);\r\n            setTasks(updatedTasks);\r\n        }\r\n    };\r\n}","import React from 'react';\r\nimport TasksAdd from \"./TasksAdd\";\r\nimport useTaskState from '../../hooks/useTaskState';\r\n\r\nexport default function Tasks(props) {\r\n    const initialTasks = [{id: 1, task: \"Use the form above to add tasks\", completed: false}];\r\n    const {tasks, addTask, removeTask, toggleTask, deleteComplete} = useTaskState(initialTasks);\r\n    \r\n\r\n    return (\r\n        <div className=\"tasks\">\r\n            <svg className=\"tasks__background\">\r\n\t\t        <use xlinkHref=\"./images/symbol-defs.svg#icon-logo\"></use>\r\n\t        </svg>\r\n            <TasksAdd addTask={addTask}/>\r\n            <div className=\"tasks__layout\">\r\n                <div className=\"tasks__container\">\r\n                    <ul className=\"tasks__list\">\r\n                    {tasks.map(task => (\r\n                        <li className={`tasks__item ${task.completed && 'tasks__item--completed'}`} key={task.id}>\r\n                            <span onClick={() => toggleTask(task.id)}>{task.task}</span>\r\n                            <span className=\"tasks__item--date\">{task.formattedDate}</span>\r\n                            <button className=\"tasks__item--delete\" aria-label=\"Delete task\" onClick={() => removeTask(task.id)}>\r\n                                <svg className=\"tasks__button-icon tasks__button-icon--miniTrash\">\r\n                                    <use xlinkHref=\"./images/symbol-defs.svg#icon-trashcan\"></use>\r\n                                </svg>\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                    </ul>\r\n                </div>\r\n                <button className=\"tasks__deleteAll\" type=\"button\" onClick={() => deleteComplete()}>\r\n                    <svg className=\"tasks__button-icon tasks__button-icon--trash\">\r\n\t\t                <use xlinkHref=\"./images/symbol-defs.svg#icon-trashcan\"></use>\r\n\t                </svg>\r\n                    Delete Completed\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Tasks from \"../tasks/Tasks\";\r\n\r\nexport default function Content() {\r\n    \r\n    return (\r\n        <div className=\"content\">\r\n            <Tasks />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"footer\" data-testid=\"footer\">\r\n            <nav className=\"footer__container\">\r\n                <div className=\"footer__current\">\r\n                    <h1 className=\"footer__title\">Tasks</h1>\r\n                </div>\r\n                <div className=\"footer__nav\">\r\n                    <div className=\"footer__nav--left\">\r\n                        <div className=\"footer__nav--row\">\r\n                            <svg className=\"footer__icon footer__icon--calendar\">\r\n                                <use xlinkHref=\"./images/symbol-defs.svg#icon-calendar\"></use>\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"footer__nav--row\">\r\n                            <svg className=\"footer__icon footer__icon--tasks footer__icon--active\">\r\n                                <use xlinkHref=\"./images/symbol-defs.svg#icon-tasks\"></use>\r\n                            </svg>\r\n                            <svg className=\"footer__icon footer__icon--list\">\r\n                                <use xlinkHref=\"./images/symbol-defs.svg#icon-list\"></use>\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"footer__nav--right\">\r\n                        <div className=\"footer__nav--row\">\r\n                            <svg className=\"footer__icon\">\r\n                                <use xlinkHref=\"./images/symbol-defs.svg#icon-tracker\"></use>\r\n                            </svg>\r\n                            <svg className=\"footer__icon\">\r\n                                <use xlinkHref=\"./images/symbol-defs.svg#icon-travel\"></use>\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"footer__nav--row\">\r\n                            <svg className=\"footer__icon\">\r\n                                <use xlinkHref=\"./images/symbol-defs.svg#icon-menu\"></use>\r\n                            </svg>\r\n                            <svg className=\"footer__icon\">\r\n                                <use xlinkHref=\"./images/symbol-defs.svg#icon-budget\"></use>\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </footer>\r\n    )\r\n}","import React, {createContext, useState} from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport function ThemeProvider(props) {\r\n    const [theme, setTheme] = useState(\"normal\");\r\n    const toggleTheme = (e) => setTheme(e.target.value);\r\n    return (\r\n        <ThemeContext.Provider value={{theme, toggleTheme}}>\r\n            {props.children}\r\n        </ThemeContext.Provider>\r\n    )\r\n};\r\n","import React, {useState} from 'react';\r\nimport Header from \"./components/layout/Header\";\r\nimport Content from \"./components/layout/Content\";\r\nimport Footer from \"./components/layout/Footer\";\r\nimport { ThemeProvider } from './context/theme-context';\r\n\r\nfunction App() {\r\n  const [module, setModule] = useState(\"tasks\");\r\n\r\n  return (\r\n        <ThemeProvider>\r\n          <div className=\"App\">\r\n            <Header module={module}/>\r\n            <Content />\r\n            <Footer setModule={setModule} />\r\n          </div>\r\n        </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./sass/App.scss\";\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}